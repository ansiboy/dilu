{"version":3,"sources":["../out/formValidator.js"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","define","require","exports","errors_1","Object","defineProperty","FormValidator","form","validateOnChanged","errors","argumentNull","fields","elementEvents","field","push","map","o","errorElement","filter","forEach","style","display","name","fieldErrorElement","error","removeProperty","innerHTML","element","querySelectorAll","elementNotExists","getElementsByClassName","errorClassName","fieldElement","document","createElement","className","nextSibling","parentElement","insertBefore","appendChild","ps","Array","i","length","condition","p","checkField","checkFieldAsync","all","checkResults","isAsync","validateFunc","checking","catch","addEventListener","tagName","bindElementEvent","depends","j","dependResult","Error","dependIsOK","rules","rule","fieldElementCanntNull","elementValue","isPass","validate","showElement","console","assert","elementName","errorText","replace"],"mappings":"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","sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\ndefine([\"require\", \"exports\", \"./errors\"], function (require, exports, errors_1) {\r\n    \"use strict\";\r\n    Object.defineProperty(exports, \"__esModule\", { value: true });\r\n    /**\r\n     * 表单验证器，用于对表单中的字段进行验证\r\n     */\r\n    class FormValidator {\r\n        constructor(form, ...fields) {\r\n            /** 输入框的值发生改变，是否重新校验该输入框的值，默认为 true */\r\n            this.validateOnChanged = true;\r\n            if (!form)\r\n                throw errors_1.errors.argumentNull('form');\r\n            this.fields = fields || [];\r\n            this.form = form;\r\n            this.elementEvents = {};\r\n        }\r\n        appendField(field) {\r\n            this.fields.push(field);\r\n        }\r\n        /**\r\n         * 清除表单的错误信息\r\n         */\r\n        clearErrors() {\r\n            this.fields.map(o => o.errorElement)\r\n                .filter(o => o != null)\r\n                .forEach(o => o.style.display = 'none');\r\n        }\r\n        /**\r\n         * 清除表单的指定元素错误信息\r\n         * @param name 指定的元素名称\r\n         */\r\n        clearElementError(name) {\r\n            if (!name)\r\n                throw errors_1.errors.argumentNull('name');\r\n            let fields = this.fields.filter(o => o.name == name);\r\n            for (let field of fields) {\r\n                let errorElement = this.fieldErrorElement(field);\r\n                errorElement.style.display = 'none';\r\n            }\r\n        }\r\n        /**\r\n         * 设置表单的指定元素错误信息\r\n         * @param name 指定的元素名称\r\n         * @param error 错误信息\r\n         */\r\n        setElementError(name, error) {\r\n            if (!name)\r\n                throw errors_1.errors.argumentNull('name');\r\n            if (!error)\r\n                throw errors_1.errors.argumentNull('error');\r\n            let fields = this.fields.filter(o => o.name == name);\r\n            for (let field of fields) {\r\n                let errorElement = this.fieldErrorElement(field);\r\n                errorElement.style.removeProperty('display');\r\n                errorElement.innerHTML = error;\r\n            }\r\n        }\r\n        fieldElement(field) {\r\n            let name = field.name;\r\n            let element = this.form.querySelectorAll(`[name='${name}']`)[0];\r\n            if (element == null)\r\n                throw errors_1.errors.elementNotExists(name);\r\n            return element;\r\n        }\r\n        fieldErrorElement(field) {\r\n            if (!field.errorElement) {\r\n                let errorElement = this.form.getElementsByClassName(`${FormValidator.errorClassName} ${field.name}`)[0];\r\n                if (!errorElement) {\r\n                    let element = this.fieldElement(field);\r\n                    errorElement = document.createElement(\"span\");\r\n                    errorElement.className = FormValidator.errorClassName;\r\n                    errorElement.style.display = 'none';\r\n                    if (element.nextSibling)\r\n                        element.parentElement.insertBefore(errorElement, element.nextSibling);\r\n                    else\r\n                        element.parentElement.appendChild(errorElement);\r\n                }\r\n                field.errorElement = errorElement;\r\n            }\r\n            return field.errorElement;\r\n            // return errorElement;\r\n        }\r\n        /**\r\n         * 验证字段\r\n         */\r\n        check() {\r\n            let ps = new Array();\r\n            for (let i = 0; i < this.fields.length; i++) {\r\n                let field = this.fields[i];\r\n                let element = this.fieldElement(field);\r\n                if (field.condition && field.condition(element) == false)\r\n                    continue;\r\n                let p = this.checkField(field);\r\n                ps.push(p);\r\n            }\r\n            let result = ps.filter(o => o == false).length == 0;\r\n            return result;\r\n        }\r\n        /**\r\n         * 异步验证字段\r\n         */\r\n        checkAsync() {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                let ps = new Array();\r\n                for (let i = 0; i < this.fields.length; i++) {\r\n                    let field = this.fields[i];\r\n                    let element = this.fieldElement(field);\r\n                    if (field.condition && field.condition(element) == false)\r\n                        continue;\r\n                    let p = this.checkFieldAsync(field);\r\n                    ps.push(p);\r\n                }\r\n                let checkResults = yield Promise.all(ps);\r\n                let result = checkResults.filter(o => o == false).length == 0;\r\n                return result;\r\n            });\r\n        }\r\n        bindElementEvent(field, isAsync) {\r\n            if (this.elementEvents[field.name]) {\r\n                return;\r\n            }\r\n            let element = this.fieldElement(field);\r\n            let validateFunc = (() => {\r\n                let checking = false;\r\n                return () => {\r\n                    if (checking)\r\n                        return;\r\n                    checking = true;\r\n                    // isAsync ? this.checkFieldAsync(field) : this.checkField(field);\r\n                    if (isAsync) {\r\n                        this.checkFieldAsync(field)\r\n                            .then(() => checking = false)\r\n                            .catch(() => checking = false);\r\n                    }\r\n                    else {\r\n                        this.checkField(field);\r\n                        checking = false;\r\n                    }\r\n                };\r\n            })();\r\n            if (this.validateOnChanged) {\r\n                element.addEventListener('change', validateFunc);\r\n                if (element.tagName != 'select') {\r\n                    element.addEventListener('keyup', validateFunc);\r\n                }\r\n            }\r\n            this.elementEvents[field.name] = true;\r\n        }\r\n        checkField(field) {\r\n            this.bindElementEvent(field, false);\r\n            let element = this.fieldElement(field);\r\n            let depends = field.depends || [];\r\n            for (let j = 0; j < depends.length; j++) {\r\n                let dependResult = depends[j](element);\r\n                if (typeof dependResult == 'object') {\r\n                    throw new Error('Please use checkAsync method.');\r\n                }\r\n                let dependIsOK = dependResult;\r\n                if (!dependIsOK)\r\n                    return false;\r\n            }\r\n            for (let j = 0; j < field.rules.length; j++) {\r\n                let rule = field.rules[j];\r\n                let element = this.fieldElement(field);\r\n                if (element == null)\r\n                    throw errors_1.errors.fieldElementCanntNull();\r\n                let value = FormValidator.elementValue(element);\r\n                let isPass = rule.validate(value);\r\n                if (typeof isPass == 'object') {\r\n                    throw new Error('Please use checkAsync method.');\r\n                }\r\n                this.showElement(!isPass, field, rule, element);\r\n                if (!isPass)\r\n                    return false;\r\n            }\r\n            return true;\r\n        }\r\n        checkFieldAsync(field) {\r\n            return __awaiter(this, void 0, void 0, function* () {\r\n                this.bindElementEvent(field, true);\r\n                let element = this.fieldElement(field);\r\n                let depends = field.depends || [];\r\n                for (let j = 0; j < depends.length; j++) {\r\n                    let dependResult = depends[j](element);\r\n                    if (typeof dependResult == 'boolean') {\r\n                        dependResult = Promise.resolve(dependResult);\r\n                    }\r\n                    let dependIsOK = yield dependResult;\r\n                    if (!dependIsOK)\r\n                        return false;\r\n                }\r\n                for (let j = 0; j < field.rules.length; j++) {\r\n                    let rule = field.rules[j];\r\n                    let element = this.fieldElement(field);\r\n                    if (element == null)\r\n                        throw errors_1.errors.fieldElementCanntNull();\r\n                    let value = FormValidator.elementValue(element);\r\n                    let p = rule.validate(value);\r\n                    if (typeof p == 'boolean') {\r\n                        p = Promise.resolve(p);\r\n                    }\r\n                    let isPass = yield p;\r\n                    this.showElement(!isPass, field, rule, element);\r\n                    if (!isPass)\r\n                        return false;\r\n                }\r\n                return true;\r\n            });\r\n        }\r\n        showElement(display, field, rule, element) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            console.assert(errorElement != null, 'errorElement cannt be null.');\r\n            if (rule.error != null) {\r\n                errorElement = field.errorElement;\r\n                let name = this.elementName(element);\r\n                let errorText = typeof rule.error == 'string' ? rule.error : rule.error() || '';\r\n                errorElement.innerHTML = errorText.replace('%s', name);\r\n            }\r\n            if (display) {\r\n                errorElement.style.removeProperty('display');\r\n            }\r\n            else {\r\n                errorElement.style.display = 'none';\r\n            }\r\n        }\r\n        /**\r\n         * 异步验证 HTML 元素\r\n         * @param name HTML 元素名称\r\n         */\r\n        checkElementAsync(name) {\r\n            let field = this.fields.filter(o => o.name == name)[0];\r\n            if (!field)\r\n                throw errors_1.errors.elementNotExists(name);\r\n            return this.checkFieldAsync(field);\r\n        }\r\n        /**\r\n         * 同步验证 HTML 元素\r\n         * @param name HTML 元素名称\r\n         */\r\n        checkElement(name) {\r\n            let field = this.fields.filter(o => o.name == name)[0];\r\n            if (!field)\r\n                throw errors_1.errors.elementNotExists(name);\r\n            return this.checkField(field);\r\n        }\r\n        static elementValue(element) {\r\n            if (element.tagName == \"TEXTAREA\") {\r\n                return element.value;\r\n            }\r\n            return element.value;\r\n        }\r\n        elementName(element) {\r\n            if (element.tagName == \"TEXTAREA\") {\r\n                return element.name;\r\n            }\r\n            return element.name;\r\n        }\r\n    }\r\n    FormValidator.errorClassName = 'validationMessage';\r\n    exports.FormValidator = FormValidator;\r\n});\r\n// }\r\n"],"file":"formValidator.js"}
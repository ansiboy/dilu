/*!
 * 
 *  maishu-dilu v1.3.8
 *  https://github.com/ansiboy/dilu
 *  
 *  Copyright (c) 2016-2018, shu mai <ansiboy@163.com>
 *  Licensed under the MIT License.
 * 
 */
define(function() { return /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./out-es5/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./out-es5/errors.js":
/*!***************************!*\
  !*** ./out-es5/errors.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); // namespace dilu {\n\n  exports.errors = {\n    argumentNull: function argumentNull(parameterName) {\n      var msg = \"Parameter \".concat(parameterName, \" can not be null or empty.\");\n      return new Error(msg);\n    },\n    elementValidateRuleNotSet: function elementValidateRuleNotSet(element) {\n      var msg = \"\\u5143\\u7D20'\".concat(element.name, \"'\\u6CA1\\u6709\\u8BBE\\u7F6E\\u9A8C\\u8BC1\\u89C4\\u5219\");\n      return new Error(msg);\n    },\n    fieldElementCanntNull: function fieldElementCanntNull(fieldIndex) {\n      // if (fieldIndex != null)\n      var msg = fieldIndex != null ? \"The element value in the field cannt be null, field index is \".concat(fieldIndex, \".\") : \"The element in the field is null\";\n      return new Error(msg);\n    },\n    elementNotExists: function elementNotExists(name) {\n      var msg = \"Element \".concat(name, \" is not exits in the form.\");\n      return new Error(msg);\n    },\n    fieldResultExpectBooleanType: function fieldResultExpectBooleanType(name) {\n      var msg = \"Result of \".concat(name, \" field is expected boolean.\");\n      return new Error(msg);\n    }\n  };\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // }\n//# sourceMappingURL=errors.js.map\n\n\n//# sourceURL=webpack:///./out-es5/errors.js?");

/***/ }),

/***/ "./out-es5/formValidator.js":
/*!**********************************!*\
  !*** ./out-es5/formValidator.js ***!
  \**********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nvar __awaiter = void 0 && (void 0).__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./errors */ \"./out-es5/errors.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, errors_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  /**\r\n   * 表单验证器，用于对表单中的字段进行验证\r\n   */\n\n  var FormValidator =\n  /*#__PURE__*/\n  function () {\n    function FormValidator(form) {\n      _classCallCheck(this, FormValidator);\n\n      /** 输入框的值发生改变，是否重新校验该输入框的值，默认为 true */\n      this.validateOnChanged = true;\n      if (!form) throw errors_1.errors.argumentNull('form');\n\n      for (var _len = arguments.length, fields = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        fields[_key - 1] = arguments[_key];\n      }\n\n      this.fields = fields || [];\n      this.form = form;\n      this.elementEvents = {};\n    }\n\n    _createClass(FormValidator, [{\n      key: \"appendField\",\n      value: function appendField(field) {\n        this.fields.push(field);\n      }\n      /**\r\n       * 清除表单的错误信息\r\n       */\n\n    }, {\n      key: \"clearErrors\",\n      value: function clearErrors() {\n        this.fields.map(function (o) {\n          return o.errorElement;\n        }).filter(function (o) {\n          return o != null;\n        }).forEach(function (o) {\n          return o.style.display = 'none';\n        });\n      }\n      /**\r\n       * 清除表单的指定元素错误信息\r\n       * @param name 指定的元素名称\r\n       */\n\n    }, {\n      key: \"clearElementError\",\n      value: function clearElementError(name) {\n        if (!name) throw errors_1.errors.argumentNull('name');\n        var fields = this.fields.filter(function (o) {\n          return o.name == name;\n        });\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = fields[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var field = _step.value;\n            var errorElement = this.fieldErrorElement(field);\n            errorElement.style.display = 'none';\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n      /**\r\n       * 设置表单的指定元素错误信息\r\n       * @param name 指定的元素名称\r\n       * @param error 错误信息\r\n       */\n\n    }, {\n      key: \"setElementError\",\n      value: function setElementError(name, error) {\n        if (!name) throw errors_1.errors.argumentNull('name');\n        if (!error) throw errors_1.errors.argumentNull('error');\n        var fields = this.fields.filter(function (o) {\n          return o.name == name;\n        });\n        var _iteratorNormalCompletion2 = true;\n        var _didIteratorError2 = false;\n        var _iteratorError2 = undefined;\n\n        try {\n          for (var _iterator2 = fields[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n            var field = _step2.value;\n            var errorElement = this.fieldErrorElement(field);\n            errorElement.style.removeProperty('display');\n            errorElement.innerHTML = error;\n          }\n        } catch (err) {\n          _didIteratorError2 = true;\n          _iteratorError2 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion2 && _iterator2.return != null) {\n              _iterator2.return();\n            }\n          } finally {\n            if (_didIteratorError2) {\n              throw _iteratorError2;\n            }\n          }\n        }\n      }\n    }, {\n      key: \"fieldElement\",\n      value: function fieldElement(field) {\n        var name = field.name;\n        var element = this.form.querySelectorAll(\"[name='\".concat(name, \"']\"))[0];\n        if (element == null) throw errors_1.errors.elementNotExists(name);\n        return element;\n      }\n    }, {\n      key: \"fieldErrorElement\",\n      value: function fieldErrorElement(field) {\n        if (!field.errorElement) {\n          var errorElement = this.form.getElementsByClassName(\"\".concat(FormValidator.errorClassName, \" \").concat(field.name))[0];\n\n          if (!errorElement) {\n            var element = this.fieldElement(field);\n            errorElement = document.createElement(\"span\");\n            errorElement.className = FormValidator.errorClassName;\n            errorElement.style.display = 'none';\n            if (element.nextSibling) element.parentElement.insertBefore(errorElement, element.nextSibling);else element.parentElement.appendChild(errorElement);\n          }\n\n          field.errorElement = errorElement;\n        }\n\n        return field.errorElement; // return errorElement;\n      }\n      /**\r\n       * 验证字段\r\n       */\n\n    }, {\n      key: \"check\",\n      value: function check() {\n        var ps = new Array();\n\n        for (var i = 0; i < this.fields.length; i++) {\n          var field = this.fields[i];\n          var element = this.fieldElement(field);\n          if (field.condition && field.condition(element) == false) continue;\n          var p = this.checkField(field);\n          ps.push(p);\n        }\n\n        var result = ps.filter(function (o) {\n          return o == false;\n        }).length == 0;\n        return result;\n      }\n      /**\r\n       * 异步验证字段\r\n       */\n\n    }, {\n      key: \"checkAsync\",\n      value: function checkAsync() {\n        return __awaiter(this, void 0, void 0,\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee() {\n          var ps, i, field, element, p, checkResults, result;\n          return regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  ps = new Array();\n                  i = 0;\n\n                case 2:\n                  if (!(i < this.fields.length)) {\n                    _context.next = 12;\n                    break;\n                  }\n\n                  field = this.fields[i];\n                  element = this.fieldElement(field);\n\n                  if (!(field.condition && field.condition(element) == false)) {\n                    _context.next = 7;\n                    break;\n                  }\n\n                  return _context.abrupt(\"continue\", 9);\n\n                case 7:\n                  p = this.checkFieldAsync(field);\n                  ps.push(p);\n\n                case 9:\n                  i++;\n                  _context.next = 2;\n                  break;\n\n                case 12:\n                  _context.next = 14;\n                  return Promise.all(ps);\n\n                case 14:\n                  checkResults = _context.sent;\n                  result = checkResults.filter(function (o) {\n                    return o == false;\n                  }).length == 0;\n                  return _context.abrupt(\"return\", result);\n\n                case 17:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n      }\n    }, {\n      key: \"bindElementEvent\",\n      value: function bindElementEvent(field, isAsync) {\n        var _this = this;\n\n        if (this.elementEvents[field.name]) {\n          return;\n        }\n\n        var element = this.fieldElement(field);\n\n        var validateFunc = function () {\n          var checking = false;\n          return function () {\n            if (checking) return;\n            checking = true; // isAsync ? this.checkFieldAsync(field) : this.checkField(field);\n\n            if (isAsync) {\n              _this.checkFieldAsync(field).then(function () {\n                return checking = false;\n              }).catch(function () {\n                return checking = false;\n              });\n            } else {\n              _this.checkField(field);\n\n              checking = false;\n            }\n          };\n        }();\n\n        if (this.validateOnChanged) {\n          element.addEventListener('change', validateFunc);\n\n          if (element.tagName != 'select') {\n            element.addEventListener('keyup', validateFunc);\n          }\n        }\n\n        this.elementEvents[field.name] = true;\n      }\n    }, {\n      key: \"checkField\",\n      value: function checkField(field) {\n        this.bindElementEvent(field, false);\n        var element = this.fieldElement(field);\n        var depends = field.depends || [];\n\n        for (var j = 0; j < depends.length; j++) {\n          var dependResult = depends[j](element);\n\n          if (_typeof(dependResult) == 'object') {\n            throw new Error('Please use checkAsync method.');\n          }\n\n          var dependIsOK = dependResult;\n          if (!dependIsOK) return false;\n        }\n\n        for (var _j = 0; _j < field.rules.length; _j++) {\n          var rule = field.rules[_j];\n\n          var _element = this.fieldElement(field);\n\n          if (_element == null) throw errors_1.errors.fieldElementCanntNull();\n          var value = FormValidator.elementValue(_element);\n          var isPass = rule.validate(value);\n\n          if (_typeof(isPass) == 'object') {\n            throw new Error('Please use checkAsync method.');\n          }\n\n          this.showElement(!isPass, field, rule, _element);\n          if (!isPass) return false;\n        }\n\n        return true;\n      }\n    }, {\n      key: \"checkFieldAsync\",\n      value: function checkFieldAsync(field) {\n        return __awaiter(this, void 0, void 0,\n        /*#__PURE__*/\n        regeneratorRuntime.mark(function _callee2() {\n          var element, depends, j, dependResult, dependIsOK, _j2, rule, _element2, value, p, isPass;\n\n          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  this.bindElementEvent(field, true);\n                  element = this.fieldElement(field);\n                  depends = field.depends || [];\n                  j = 0;\n\n                case 4:\n                  if (!(j < depends.length)) {\n                    _context2.next = 15;\n                    break;\n                  }\n\n                  dependResult = depends[j](element);\n\n                  if (typeof dependResult == 'boolean') {\n                    dependResult = Promise.resolve(dependResult);\n                  }\n\n                  _context2.next = 9;\n                  return dependResult;\n\n                case 9:\n                  dependIsOK = _context2.sent;\n\n                  if (dependIsOK) {\n                    _context2.next = 12;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", false);\n\n                case 12:\n                  j++;\n                  _context2.next = 4;\n                  break;\n\n                case 15:\n                  _j2 = 0;\n\n                case 16:\n                  if (!(_j2 < field.rules.length)) {\n                    _context2.next = 33;\n                    break;\n                  }\n\n                  rule = field.rules[_j2];\n                  _element2 = this.fieldElement(field);\n\n                  if (!(_element2 == null)) {\n                    _context2.next = 21;\n                    break;\n                  }\n\n                  throw errors_1.errors.fieldElementCanntNull();\n\n                case 21:\n                  value = FormValidator.elementValue(_element2);\n                  p = rule.validate(value);\n\n                  if (typeof p == 'boolean') {\n                    p = Promise.resolve(p);\n                  }\n\n                  _context2.next = 26;\n                  return p;\n\n                case 26:\n                  isPass = _context2.sent;\n                  this.showElement(!isPass, field, rule, _element2);\n\n                  if (isPass) {\n                    _context2.next = 30;\n                    break;\n                  }\n\n                  return _context2.abrupt(\"return\", false);\n\n                case 30:\n                  _j2++;\n                  _context2.next = 16;\n                  break;\n\n                case 33:\n                  return _context2.abrupt(\"return\", true);\n\n                case 34:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2, this);\n        }));\n      }\n    }, {\n      key: \"showElement\",\n      value: function showElement(display, field, rule, element) {\n        var errorElement = this.fieldErrorElement(field);\n        console.assert(errorElement != null, 'errorElement cannt be null.');\n\n        if (rule.error != null) {\n          errorElement = field.errorElement;\n          var name = this.elementName(element);\n          var errorText = typeof rule.error == 'string' ? rule.error : rule.error() || '';\n          errorElement.innerHTML = errorText.replace('%s', name);\n        }\n\n        if (display) {\n          errorElement.style.removeProperty('display');\n        } else {\n          errorElement.style.display = 'none';\n        }\n      }\n      /**\r\n       * 异步验证 HTML 元素\r\n       * @param name HTML 元素名称\r\n       */\n\n    }, {\n      key: \"checkElementAsync\",\n      value: function checkElementAsync(name) {\n        var field = this.fields.filter(function (o) {\n          return o.name == name;\n        })[0];\n        if (!field) throw errors_1.errors.elementNotExists(name);\n        return this.checkFieldAsync(field);\n      }\n      /**\r\n       * 同步验证 HTML 元素\r\n       * @param name HTML 元素名称\r\n       */\n\n    }, {\n      key: \"checkElement\",\n      value: function checkElement(name) {\n        var field = this.fields.filter(function (o) {\n          return o.name == name;\n        })[0];\n        if (!field) throw errors_1.errors.elementNotExists(name);\n        return this.checkField(field);\n      }\n    }, {\n      key: \"elementName\",\n      value: function elementName(element) {\n        if (element.tagName == \"TEXTAREA\") {\n          return element.name;\n        }\n\n        return element.name;\n      }\n    }], [{\n      key: \"elementValue\",\n      value: function elementValue(element) {\n        if (element.tagName == \"TEXTAREA\") {\n          return element.value;\n        }\n\n        return element.value;\n      }\n    }]);\n\n    return FormValidator;\n  }();\n\n  FormValidator.errorClassName = 'validationMessage';\n  exports.FormValidator = FormValidator;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // }\n//# sourceMappingURL=formValidator.js.map\n\n\n//# sourceURL=webpack:///./out-es5/formValidator.js?");

/***/ }),

/***/ "./out-es5/index.js":
/*!**************************!*\
  !*** ./out-es5/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./formValidator */ \"./out-es5/formValidator.js\"), __webpack_require__(/*! ./rules */ \"./out-es5/rules.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, formValidator_1, rules_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.FormValidator = formValidator_1.FormValidator;\n  exports.rules = rules_1.rules;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n//# sourceMappingURL=index.js.map\n\n\n//# sourceURL=webpack:///./out-es5/index.js?");

/***/ }),

/***/ "./out-es5/rules.js":
/*!**************************!*\
  !*** ./out-es5/rules.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;\n\n!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__, exports, __webpack_require__(/*! ./formValidator */ \"./out-es5/formValidator.js\")], __WEBPACK_AMD_DEFINE_RESULT__ = (function (require, exports, formValidator_1) {\n  \"use strict\";\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  }); // namespace dilu {\n\n  var ruleRegex = /^(.+?)\\[(.+)\\]$/,\n      numericRegex = /^[0-9]+$/,\n      integerRegex = /^\\-?[0-9]+$/,\n      decimalRegex = /^\\-?[0-9]*\\.?[0-9]+$/,\n      emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/,\n      alphaRegex = /^[a-z]+$/i,\n      alphaNumericRegex = /^[a-z0-9]+$/i,\n      alphaDashRegex = /^[a-z0-9_\\-]+$/i,\n      naturalRegex = /^[0-9]+$/i,\n      naturalNoZeroRegex = /^[1-9][0-9]*$/i,\n      ipRegex = /^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$/i,\n      base64Regex = /[^a-zA-Z0-9\\/\\+=]/i,\n      numericDashRegex = /^[\\d\\-\\s]+$/,\n      urlRegex = /^((http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)|)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/,\n      mobileRegex = /^1[34578]\\d{9}$/,\n      dateRegex = /\\d{4}-\\d{1,2}-\\d{1,2}/;\n  var msgs = {\n    required: '%s不能为空',\n    matches: '%s与%s不匹配',\n    \"default\": 'The %s field is still set to default, please change.',\n    equal: '%s和%s必须相同',\n    email: '不是有效的邮箱地址',\n    valid_emails: 'The %s field must contain all valid email addresses.',\n    minLength: '%s至少包含%s个字符',\n    maxLength: '%s不能超过%s字符',\n    exact_length: 'The %s field must be exactly %s characters in length.',\n    greater_than: 'The %s field must contain a number greater than %s.',\n    less_than: 'The %s field must contain a number less than %s.',\n    alpha: 'The %s field must only contain alphabetical characters.',\n    alpha_numeric: 'The %s field must only contain alpha-numeric characters.',\n    alpha_dash: 'The %s field must only contain alpha-numeric characters, underscores, and dashes.',\n    numeric: '请数入数字',\n    integer: 'The %s field must contain an integer.',\n    decimal: 'The %s field must contain a decimal number.',\n    is_natural: 'The %s field must contain only positive numbers.',\n    is_natural_no_zero: 'The %s field must contain a number greater than zero.',\n    ip: 'The %s field must contain a valid IP.',\n    valid_base64: 'The %s field must contain a base64 string.',\n    valid_credit_card: 'The %s field must contain a valid credit card number.',\n    is_file_type: 'The %s field must contain only %s files.',\n    valid_url: 'The %s field must contain a valid URL.',\n    greater_than_date: 'The %s field must contain a more recent date than %s.',\n    less_than_date: 'The %s field must contain an older date than %s.',\n    greater_than_or_equal_date: 'The %s field must contain a date that\\'s at least as recent as %s.',\n    less_than_or_equal_date: 'The %s field must contain a date that\\'s %s or older.',\n    mobile: '请输入正确的手机号码',\n    custom: '请输入正确制'\n  };\n\n  function createValidation(validate, error) {\n    return {\n      validate: validate,\n      error: error\n    };\n  }\n\n  function calc(value) {\n    if (typeof value == 'function') {\n      return value();\n    }\n\n    return value;\n  }\n  /**\r\n   * 表单验证规则\r\n   */\n\n\n  exports.rules = {\n    /**\r\n     * 验证必填字段\r\n     * @param error 错误提示文字\r\n     */\n    required: function required(error) {\n      var validate = function validate(value) {\n        return value != '';\n      };\n\n      return createValidation(validate, error || msgs.required);\n    },\n\n    /**\r\n     * 验证两个字段值是否相等\r\n     * @param otherElement 另外一个字段\r\n     * @param error 错误提示文字\r\n     */\n    matches: function matches(otherElement, error) {\n      var validate = function validate(value) {\n        return value == formValidator_1.FormValidator.elementValue(otherElement);\n      };\n\n      return createValidation(validate, error || msgs.required);\n    },\n\n    /**\r\n     * 验证邮箱\r\n     * @param error 错误提示文字\r\n     */\n    email: function email(error) {\n      var validate = function validate(value) {\n        return emailRegex.test(value);\n      };\n\n      return createValidation(validate, error || msgs.required);\n    },\n\n    /**\r\n     * 验证字段最小长度\r\n     * @param length 最小长度\r\n     * @param error 错误提示文字\r\n     */\n    minLength: function minLength(length, error) {\n      var validate = function validate(value) {\n        return (value || '').length >= calc(length);\n      };\n\n      return createValidation(validate, error || msgs.minLength);\n    },\n\n    /**\r\n     * 验证字段的最大长度\r\n     * @param length 最大长度\r\n     * @param error 错误提示文字\r\n     */\n    maxLength: function maxLength(length, error) {\n      var validate = function validate(value) {\n        return (value || '').length <= calc(length);\n      };\n\n      return createValidation(validate, error || msgs.matches);\n    },\n\n    /**\r\n     * 验证字段大于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\n    greaterThan: function greaterThan(value, error) {\n      var validate = function validate(o) {\n        return elementValueCompare(o, calc(value)) == 'greaterThan';\n      };\n\n      return createValidation(validate, error || msgs.greater_than);\n    },\n\n    /**\r\n     * 验证字段小于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\n    lessThan: function lessThan(value, error) {\n      var validate = function validate(o) {\n        return elementValueCompare(o, calc(value)) == 'lessThan';\n      };\n\n      return createValidation(validate, error || msgs.less_than);\n    },\n\n    /**\r\n     * 验证字段等于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\n    equal: function equal(value, error) {\n      var validate = function validate(o) {\n        return elementValueCompare(o, calc(value)) == 'equal';\n      };\n\n      return createValidation(validate, error || msgs.equal);\n    },\n\n    /**\r\n     * 验证字段为 IP\r\n     * @param error 错误提示文字\r\n     */\n    ip: function ip(error) {\n      var validate = function validate(value) {\n        return ipRegex.test(value);\n      };\n\n      return createValidation(validate, error || msgs.ip);\n    },\n\n    /**\r\n     * 验证字段为 URL\r\n     * @param error 错误提示文字\r\n     */\n    url: function url(error) {\n      var validate = function validate(value) {\n        return urlRegex.test(value);\n      };\n\n      return createValidation(validate, error || msgs.valid_url);\n    },\n\n    /**\r\n     * 验证字段为手机号码\r\n     * @param error 错误提示文字\r\n     */\n    mobile: function mobile(error) {\n      var validate = function validate(value) {\n        return mobileRegex.test(value);\n      };\n\n      return createValidation(validate, error || msgs.mobile);\n    },\n\n    /**\r\n     * 验证字段为数字\r\n     * @param error 错误提示文字\r\n     */\n    numeric: function numeric(error) {\n      var validate = function validate(value) {\n        return numericRegex.test(value);\n      };\n\n      return createValidation(validate, error || msgs.numeric);\n    },\n\n    /**\r\n     * 自定义验证\r\n     * @param validate 自定义验证的方法\r\n     * @param error 错误提示文字\r\n     */\n    custom: function custom(validate, error) {\n      return createValidation(validate, error || msgs.custom);\n    }\n  };\n\n  function elementValueCompare(value, otherValue) {\n    var elementValue;\n\n    if (typeof otherValue == 'number') {\n      elementValue = decimalRegex.test(value) ? parseFloat(value) : null;\n    } else if (typeof otherValue == 'string') {\n      elementValue = value;\n    } else {\n      elementValue = getValidDate(value);\n    }\n\n    if (elementValue < otherValue) return 'lessThan';else if (elementValue > otherValue) return 'greaterThan';else return 'equal';\n  }\n  /**\r\n   * private function _getValidDate: helper function to convert a string date to a Date object\r\n   * @param date (String) must be in format yyyy-mm-dd or use keyword: today\r\n   * @returns {Date} returns false if invalid\r\n   */\n\n\n  function getValidDate(date) {\n    if (!date.match('today') && !date.match(dateRegex)) {\n      return null;\n    }\n\n    var validDate = new Date(),\n        validDateArray;\n\n    if (!date.match('today')) {\n      validDateArray = date.split('-');\n      validDate.setFullYear(validDateArray[0]);\n      validDate.setMonth(validDateArray[1] - 1);\n      validDate.setDate(validDateArray[2]);\n    }\n\n    return validDate;\n  }\n\n  ;\n}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),\n\t\t\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // }\n//# sourceMappingURL=rules.js.map\n\n\n//# sourceURL=webpack:///./out-es5/rules.js?");

/***/ })

/******/ })});;
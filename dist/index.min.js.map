{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./out/formValidator.js","webpack:///./out/index.js","webpack:///./out/errors.js","webpack:///./out/rules.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","errors_1","FormValidator","[object Object]","form","fields","validateOnChanged","errors","argumentNull","elementEvents","field","push","map","errorElement","filter","forEach","style","display","fieldErrorElement","error","removeProperty","innerHTML","element","querySelectorAll","elementNotExists","getElementsByClassName","errorClassName","fieldElement","document","createElement","className","nextSibling","parentElement","insertBefore","appendChild","ps","Array","length","condition","checkField","checkFieldAsync","all","isAsync","validateFunc","checking","catch","addEventListener","tagName","bindElementEvent","depends","j","dependResult","Error","rules","rule","fieldElementCanntNull","elementValue","isPass","validate","showElement","console","assert","elementName","errorText","replace","formValidator_1","rules_1","parameterName","msg","fieldIndex","fieldResultExpectBooleanType","numericRegex","decimalRegex","emailRegex","ipRegex","urlRegex","mobileRegex","dateRegex","msgs","createValidation","calc","elementValueCompare","otherValue","test","parseFloat","date","match","validDateArray","validDate","Date","split","setFullYear","setMonth","setDate","getValidDate","required","matches","otherElement","email","minLength","maxLength","greaterThan","lessThan","equal","ip","url","mobile","numeric","custom"],"mappings":"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","file":"index.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst errors_1 = require(\"./errors\");\r\n/**\r\n * 表单验证器，用于对表单中的字段进行验证\r\n */\r\nclass FormValidator {\r\n    constructor(form, ...fields) {\r\n        /** 输入框的值发生改变，是否重新校验该输入框的值，默认为 true */\r\n        this.validateOnChanged = true;\r\n        if (!form)\r\n            throw errors_1.errors.argumentNull('form');\r\n        this.fields = fields || [];\r\n        this.form = form;\r\n        this.elementEvents = {};\r\n    }\r\n    appendField(field) {\r\n        this.fields.push(field);\r\n    }\r\n    /**\r\n     * 清除表单的错误信息\r\n     */\r\n    clearErrors() {\r\n        this.fields.map(o => o.errorElement)\r\n            .filter(o => o != null)\r\n            .forEach(o => o.style.display = 'none');\r\n    }\r\n    /**\r\n     * 清除表单的指定元素错误信息\r\n     * @param name 指定的元素名称\r\n     */\r\n    clearElementError(name) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull('name');\r\n        let fields = this.fields.filter(o => o.name == name);\r\n        for (let field of fields) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            errorElement.style.display = 'none';\r\n        }\r\n    }\r\n    /**\r\n     * 设置表单的指定元素错误信息\r\n     * @param name 指定的元素名称\r\n     * @param error 错误信息\r\n     */\r\n    setElementError(name, error) {\r\n        if (!name)\r\n            throw errors_1.errors.argumentNull('name');\r\n        if (!error)\r\n            throw errors_1.errors.argumentNull('error');\r\n        let fields = this.fields.filter(o => o.name == name);\r\n        for (let field of fields) {\r\n            let errorElement = this.fieldErrorElement(field);\r\n            errorElement.style.removeProperty('display');\r\n            errorElement.innerHTML = error;\r\n        }\r\n    }\r\n    fieldElement(field) {\r\n        let name = field.name;\r\n        let element = this.form.querySelectorAll(`[name='${name}']`)[0];\r\n        if (element == null)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return element;\r\n    }\r\n    fieldErrorElement(field) {\r\n        if (!field.errorElement) {\r\n            let errorElement = this.form.getElementsByClassName(`${FormValidator.errorClassName} ${field.name}`)[0];\r\n            if (!errorElement) {\r\n                let element = this.fieldElement(field);\r\n                errorElement = document.createElement(\"span\");\r\n                errorElement.className = FormValidator.errorClassName;\r\n                errorElement.style.display = 'none';\r\n                if (element.nextSibling)\r\n                    element.parentElement.insertBefore(errorElement, element.nextSibling);\r\n                else\r\n                    element.parentElement.appendChild(errorElement);\r\n            }\r\n            field.errorElement = errorElement;\r\n        }\r\n        return field.errorElement;\r\n        // return errorElement;\r\n    }\r\n    /**\r\n     * 验证字段\r\n     */\r\n    check() {\r\n        let ps = new Array();\r\n        for (let i = 0; i < this.fields.length; i++) {\r\n            let field = this.fields[i];\r\n            let element = this.fieldElement(field);\r\n            if (field.condition && field.condition(element) == false)\r\n                continue;\r\n            let p = this.checkField(field);\r\n            ps.push(p);\r\n        }\r\n        let result = ps.filter(o => o == false).length == 0;\r\n        return result;\r\n    }\r\n    /**\r\n     * 异步验证字段\r\n     */\r\n    checkAsync() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let ps = new Array();\r\n            for (let i = 0; i < this.fields.length; i++) {\r\n                let field = this.fields[i];\r\n                let element = this.fieldElement(field);\r\n                if (field.condition && field.condition(element) == false)\r\n                    continue;\r\n                let p = this.checkFieldAsync(field);\r\n                ps.push(p);\r\n            }\r\n            let checkResults = yield Promise.all(ps);\r\n            let result = checkResults.filter(o => o == false).length == 0;\r\n            return result;\r\n        });\r\n    }\r\n    bindElementEvent(field, isAsync) {\r\n        if (this.elementEvents[field.name]) {\r\n            return;\r\n        }\r\n        let element = this.fieldElement(field);\r\n        let validateFunc = (() => {\r\n            let checking = false;\r\n            return () => {\r\n                if (checking)\r\n                    return;\r\n                checking = true;\r\n                // isAsync ? this.checkFieldAsync(field) : this.checkField(field);\r\n                if (isAsync) {\r\n                    this.checkFieldAsync(field)\r\n                        .then(() => checking = false)\r\n                        .catch(() => checking = false);\r\n                }\r\n                else {\r\n                    this.checkField(field);\r\n                    checking = false;\r\n                }\r\n            };\r\n        })();\r\n        if (this.validateOnChanged) {\r\n            element.addEventListener('change', validateFunc);\r\n            if (element.tagName != 'select') {\r\n                element.addEventListener('keyup', validateFunc);\r\n            }\r\n        }\r\n        this.elementEvents[field.name] = true;\r\n    }\r\n    checkField(field) {\r\n        this.bindElementEvent(field, false);\r\n        let element = this.fieldElement(field);\r\n        let depends = field.depends || [];\r\n        for (let j = 0; j < depends.length; j++) {\r\n            let dependResult = depends[j](element);\r\n            if (typeof dependResult == 'object') {\r\n                throw new Error('Please use checkAsync method.');\r\n            }\r\n            let dependIsOK = dependResult;\r\n            if (!dependIsOK)\r\n                return false;\r\n        }\r\n        for (let j = 0; j < field.rules.length; j++) {\r\n            let rule = field.rules[j];\r\n            let element = this.fieldElement(field);\r\n            if (element == null)\r\n                throw errors_1.errors.fieldElementCanntNull();\r\n            let value = FormValidator.elementValue(element);\r\n            let isPass = rule.validate(value);\r\n            if (typeof isPass == 'object') {\r\n                throw new Error('Please use checkAsync method.');\r\n            }\r\n            this.showElement(!isPass, field, rule, element);\r\n            if (!isPass)\r\n                return false;\r\n        }\r\n        return true;\r\n    }\r\n    checkFieldAsync(field) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            this.bindElementEvent(field, true);\r\n            let element = this.fieldElement(field);\r\n            let depends = field.depends || [];\r\n            for (let j = 0; j < depends.length; j++) {\r\n                let dependResult = depends[j](element);\r\n                if (typeof dependResult == 'boolean') {\r\n                    dependResult = Promise.resolve(dependResult);\r\n                }\r\n                let dependIsOK = yield dependResult;\r\n                if (!dependIsOK)\r\n                    return false;\r\n            }\r\n            for (let j = 0; j < field.rules.length; j++) {\r\n                let rule = field.rules[j];\r\n                let element = this.fieldElement(field);\r\n                if (element == null)\r\n                    throw errors_1.errors.fieldElementCanntNull();\r\n                let value = FormValidator.elementValue(element);\r\n                let p = rule.validate(value);\r\n                if (typeof p == 'boolean') {\r\n                    p = Promise.resolve(p);\r\n                }\r\n                let isPass = yield p;\r\n                this.showElement(!isPass, field, rule, element);\r\n                if (!isPass)\r\n                    return false;\r\n            }\r\n            return true;\r\n        });\r\n    }\r\n    showElement(display, field, rule, element) {\r\n        let errorElement = this.fieldErrorElement(field);\r\n        console.assert(errorElement != null, 'errorElement cannt be null.');\r\n        if (rule.error != null) {\r\n            errorElement = field.errorElement;\r\n            let name = this.elementName(element);\r\n            let errorText = typeof rule.error == 'string' ? rule.error : rule.error() || '';\r\n            errorElement.innerHTML = errorText.replace('%s', name);\r\n        }\r\n        if (display) {\r\n            errorElement.style.removeProperty('display');\r\n        }\r\n        else {\r\n            errorElement.style.display = 'none';\r\n        }\r\n    }\r\n    /**\r\n     * 异步验证 HTML 元素\r\n     * @param name HTML 元素名称\r\n     */\r\n    checkElementAsync(name) {\r\n        let field = this.fields.filter(o => o.name == name)[0];\r\n        if (!field)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return this.checkFieldAsync(field);\r\n    }\r\n    /**\r\n     * 同步验证 HTML 元素\r\n     * @param name HTML 元素名称\r\n     */\r\n    checkElement(name) {\r\n        let field = this.fields.filter(o => o.name == name)[0];\r\n        if (!field)\r\n            throw errors_1.errors.elementNotExists(name);\r\n        return this.checkField(field);\r\n    }\r\n    static elementValue(element) {\r\n        if (element.tagName == \"TEXTAREA\") {\r\n            return element.value;\r\n        }\r\n        return element.value;\r\n    }\r\n    elementName(element) {\r\n        if (element.tagName == \"TEXTAREA\") {\r\n            return element.name;\r\n        }\r\n        return element.name;\r\n    }\r\n}\r\nexports.FormValidator = FormValidator;\r\nFormValidator.errorClassName = 'validationMessage';\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar formValidator_1 = require(\"./formValidator\");\r\nexports.FormValidator = formValidator_1.FormValidator;\r\nvar rules_1 = require(\"./rules\");\r\nexports.rules = rules_1.rules;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n// namespace dilu {\r\nexports.errors = {\r\n    argumentNull(parameterName) {\r\n        let msg = `Parameter ${parameterName} can not be null or empty.`;\r\n        return new Error(msg);\r\n    },\r\n    elementValidateRuleNotSet(element) {\r\n        let msg = `元素'${element.name}'没有设置验证规则`;\r\n        return new Error(msg);\r\n    },\r\n    fieldElementCanntNull(fieldIndex) {\r\n        // if (fieldIndex != null)\r\n        let msg = fieldIndex != null ?\r\n            `The element value in the field cannt be null, field index is ${fieldIndex}.` :\r\n            `The element in the field is null`;\r\n        return new Error(msg);\r\n    },\r\n    elementNotExists(name) {\r\n        let msg = `Element ${name} is not exits in the form.`;\r\n        return new Error(msg);\r\n    },\r\n    fieldResultExpectBooleanType(name) {\r\n        let msg = `Result of ${name} field is expected boolean.`;\r\n        return new Error(msg);\r\n    }\r\n};\r\n// }\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst formValidator_1 = require(\"./formValidator\");\r\n// namespace dilu {\r\nvar ruleRegex = /^(.+?)\\[(.+)\\]$/, numericRegex = /^[0-9]+$/, integerRegex = /^\\-?[0-9]+$/, decimalRegex = /^\\-?[0-9]*\\.?[0-9]+$/, emailRegex = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/, alphaRegex = /^[a-z]+$/i, alphaNumericRegex = /^[a-z0-9]+$/i, alphaDashRegex = /^[a-z0-9_\\-]+$/i, naturalRegex = /^[0-9]+$/i, naturalNoZeroRegex = /^[1-9][0-9]*$/i, ipRegex = /^((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){3}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})$/i, base64Regex = /[^a-zA-Z0-9\\/\\+=]/i, numericDashRegex = /^[\\d\\-\\s]+$/, urlRegex = /^((http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)|)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?$/, mobileRegex = /^1[34578]\\d{9}$/, dateRegex = /\\d{4}-\\d{1,2}-\\d{1,2}/;\r\nlet msgs = {\r\n    required: '%s不能为空',\r\n    matches: '%s与%s不匹配',\r\n    \"default\": 'The %s field is still set to default, please change.',\r\n    equal: '%s和%s必须相同',\r\n    email: '不是有效的邮箱地址',\r\n    valid_emails: 'The %s field must contain all valid email addresses.',\r\n    minLength: '%s至少包含%s个字符',\r\n    maxLength: '%s不能超过%s字符',\r\n    exact_length: 'The %s field must be exactly %s characters in length.',\r\n    greater_than: 'The %s field must contain a number greater than %s.',\r\n    less_than: 'The %s field must contain a number less than %s.',\r\n    alpha: 'The %s field must only contain alphabetical characters.',\r\n    alpha_numeric: 'The %s field must only contain alpha-numeric characters.',\r\n    alpha_dash: 'The %s field must only contain alpha-numeric characters, underscores, and dashes.',\r\n    numeric: '请数入数字',\r\n    integer: 'The %s field must contain an integer.',\r\n    decimal: 'The %s field must contain a decimal number.',\r\n    is_natural: 'The %s field must contain only positive numbers.',\r\n    is_natural_no_zero: 'The %s field must contain a number greater than zero.',\r\n    ip: 'The %s field must contain a valid IP.',\r\n    valid_base64: 'The %s field must contain a base64 string.',\r\n    valid_credit_card: 'The %s field must contain a valid credit card number.',\r\n    is_file_type: 'The %s field must contain only %s files.',\r\n    valid_url: 'The %s field must contain a valid URL.',\r\n    greater_than_date: 'The %s field must contain a more recent date than %s.',\r\n    less_than_date: 'The %s field must contain an older date than %s.',\r\n    greater_than_or_equal_date: 'The %s field must contain a date that\\'s at least as recent as %s.',\r\n    less_than_or_equal_date: 'The %s field must contain a date that\\'s %s or older.',\r\n    mobile: '请输入正确的手机号码',\r\n    custom: '请输入正确制',\r\n};\r\nfunction createValidation(validate, error) {\r\n    return {\r\n        validate: validate,\r\n        error: error\r\n    };\r\n}\r\nfunction calc(value) {\r\n    if (typeof value == 'function') {\r\n        return value();\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * 表单验证规则\r\n */\r\nexports.rules = {\r\n    /**\r\n     * 验证必填字段\r\n     * @param error 错误提示文字\r\n     */\r\n    required(error) {\r\n        let validate = (value) => value != '';\r\n        return createValidation(validate, error || msgs.required);\r\n    },\r\n    /**\r\n     * 验证两个字段值是否相等\r\n     * @param otherElement 另外一个字段\r\n     * @param error 错误提示文字\r\n     */\r\n    matches(otherElement, error) {\r\n        var validate = (value) => value == formValidator_1.FormValidator.elementValue(otherElement);\r\n        return createValidation(validate, error || msgs.required);\r\n    },\r\n    /**\r\n     * 验证邮箱\r\n     * @param error 错误提示文字\r\n     */\r\n    email(error) {\r\n        var validate = (value) => emailRegex.test(value);\r\n        return createValidation(validate, error || msgs.required);\r\n    },\r\n    /**\r\n     * 验证字段最小长度\r\n     * @param length 最小长度\r\n     * @param error 错误提示文字\r\n     */\r\n    minLength(length, error) {\r\n        var validate = (value) => (value || '').length >= calc(length);\r\n        return createValidation(validate, error || msgs.minLength);\r\n    },\r\n    /**\r\n     * 验证字段的最大长度\r\n     * @param length 最大长度\r\n     * @param error 错误提示文字\r\n     */\r\n    maxLength(length, error) {\r\n        var validate = (value) => (value || '').length <= calc(length);\r\n        return createValidation(validate, error || msgs.matches);\r\n    },\r\n    /**\r\n     * 验证字段大于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\r\n    greaterThan(value, error) {\r\n        var validate = (o) => elementValueCompare(o, calc(value)) == 'greaterThan';\r\n        return createValidation(validate, error || msgs.greater_than);\r\n    },\r\n    /**\r\n     * 验证字段小于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\r\n    lessThan(value, error) {\r\n        var validate = (o) => elementValueCompare(o, calc(value)) == 'lessThan';\r\n        return createValidation(validate, error || msgs.less_than);\r\n    },\r\n    /**\r\n     * 验证字段等于指定的值\r\n     * @param value 指定的值\r\n     * @param error 错误提示文字\r\n     */\r\n    equal(value, error) {\r\n        var validate = (o) => elementValueCompare(o, calc(value)) == 'equal';\r\n        return createValidation(validate, error || msgs.equal);\r\n    },\r\n    /**\r\n     * 验证字段为 IP\r\n     * @param error 错误提示文字\r\n     */\r\n    ip(error) {\r\n        var validate = (value) => ipRegex.test(value);\r\n        return createValidation(validate, error || msgs.ip);\r\n    },\r\n    /**\r\n     * 验证字段为 URL\r\n     * @param error 错误提示文字\r\n     */\r\n    url(error) {\r\n        var validate = (value) => urlRegex.test(value);\r\n        return createValidation(validate, error || msgs.valid_url);\r\n    },\r\n    /**\r\n     * 验证字段为手机号码\r\n     * @param error 错误提示文字\r\n     */\r\n    mobile(error) {\r\n        var validate = (value) => mobileRegex.test(value);\r\n        return createValidation(validate, error || msgs.mobile);\r\n    },\r\n    /**\r\n     * 验证字段为数字\r\n     * @param error 错误提示文字\r\n     */\r\n    numeric(error) {\r\n        var validate = (value) => numericRegex.test(value);\r\n        return createValidation(validate, error || msgs.numeric);\r\n    },\r\n    /**\r\n     * 自定义验证\r\n     * @param validate 自定义验证的方法\r\n     * @param error 错误提示文字\r\n     */\r\n    custom(validate, error) {\r\n        return createValidation(validate, error || msgs.custom);\r\n    }\r\n};\r\nfunction elementValueCompare(value, otherValue) {\r\n    let elementValue;\r\n    if (typeof otherValue == 'number') {\r\n        elementValue = decimalRegex.test(value) ? parseFloat(value) : null;\r\n    }\r\n    else if (typeof otherValue == 'string') {\r\n        elementValue = value;\r\n    }\r\n    else {\r\n        elementValue = getValidDate(value);\r\n    }\r\n    if (elementValue < otherValue)\r\n        return 'lessThan';\r\n    else if (elementValue > otherValue)\r\n        return 'greaterThan';\r\n    else\r\n        return 'equal';\r\n}\r\n/**\r\n * private function _getValidDate: helper function to convert a string date to a Date object\r\n * @param date (String) must be in format yyyy-mm-dd or use keyword: today\r\n * @returns {Date} returns false if invalid\r\n */\r\nfunction getValidDate(date) {\r\n    if (!date.match('today') && !date.match(dateRegex)) {\r\n        return null;\r\n    }\r\n    var validDate = new Date(), validDateArray;\r\n    if (!date.match('today')) {\r\n        validDateArray = date.split('-');\r\n        validDate.setFullYear(validDateArray[0]);\r\n        validDate.setMonth(validDateArray[1] - 1);\r\n        validDate.setDate(validDateArray[2]);\r\n    }\r\n    return validDate;\r\n}\r\n;\r\n// }\r\n"],"sourceRoot":""}